name: cypress-e2e

on:
  push:
    branches: [main]
  pull_request:

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  e2e:
    runs-on: ubuntu-latest

    # Jeśli masz Environment Secrets (np. środowisko 'ci'), odkomentuj:
    # environment: ci

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm ci

      - name: Verify Cypress
        run: npx cypress verify

      - name: Check secrets presence (masked)
        # Skip dla PR z forka (sekrety nie są udostępniane przez GitHub)
        if: ${{ github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository }}
        env:
          # Akceptuj Secrets LUB Variables; akceptuj obie konwencje nazw.
          AUTH_USER: ${{ secrets.CYPRESS_USERNAME || secrets.AUTH_USER || vars.CYPRESS_USERNAME || vars.AUTH_USER }}
          AUTH_PASS: ${{ secrets.CYPRESS_PASSWORD || secrets.AUTH_PASS || vars.CYPRESS_PASSWORD || vars.AUTH_PASS }}
        run: |
          echo "Event: ${{ github.event_name }}"
          echo "Repository: ${{ github.repository }}"
          if [ -z "$AUTH_USER" ] || [ -z "$AUTH_PASS" ]; then
            echo "::error::Secrets/variables are NOT visible to this job."
            echo "Fix:"
            echo "  1) Add repository *Secrets*: CYPRESS_USERNAME, CYPRESS_PASSWORD"
            echo "     Settings → Security → Secrets and variables → Actions → New repository secret"
            echo "  2) If you created *Variables* instead: ok, this workflow also accepts vars (vars.*)."
            echo "  3) If you used *Environment* secrets: set 'environment: <name>' for this job."
            echo "  4) For PRs from forks: secrets are NOT exposed by GitHub (run on push or same-repo PR)."
            exit 1
          else
            echo "Secrets/variables are present (values are masked)."
          fi

      - name: Run Cypress (Electron headless) — with secrets
        if: ${{ github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository }}
        env:
          AUTH_USER: ${{ secrets.CYPRESS_USERNAME || secrets.AUTH_USER || vars.CYPRESS_USERNAME || vars.AUTH_USER }}
          AUTH_PASS: ${{ secrets.CYPRESS_PASSWORD || secrets.AUTH_PASS || vars.CYPRESS_PASSWORD || vars.AUTH_PASS }}
        run: |
          npx cypress run --headless --browser electron --spec "cypress/e2e/**/*.cy.js" \
            --reporter junit --reporter-options "mochaFile=results/junit-[hash].xml,toConsole=true"

      # Fallback: dla PR z forka odpalamy subset bez sekretów.
      - name: Run Cypress (no-secrets subset for fork PRs)
        if: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name != github.repository }}
        run: |
          echo "Running subset without secrets (fork PR)."
          npx cypress run --headless --browser electron \
            --spec "cypress/e2e/auth-negative.cy.js,cypress/e2e/bookings-negative*.cy.js,cypress/e2e/security-sanity.cy.js,cypress/e2e/sla-metrics.cy.js" \
            --reporter junit --reporter-options "mochaFile=results/junit-[hash].xml,toConsole=true"

      - name: Upload artifacts (screenshots/videos/results)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-artifacts
          path: |
            cypress/screenshots
            cypress/videos
            results
          if-no-files-found: ignore
